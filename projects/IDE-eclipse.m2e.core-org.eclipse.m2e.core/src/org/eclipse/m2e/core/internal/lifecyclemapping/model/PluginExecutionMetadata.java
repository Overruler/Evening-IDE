/*
 =================== DO NOT EDIT THIS FILE ====================
 Generated by Modello 1.4.1 on 2014-10-24 21:03:25,
 any modifications will be overwritten.
 ==============================================================
 */

package org.eclipse.m2e.core.internal.lifecyclemapping.model;

/**
 * Class PluginExecutionMetadata.
 * 
 * @version $Revision$ $Date$
 */
@SuppressWarnings( "all" )
public class PluginExecutionMetadata
    implements org.eclipse.m2e.core.lifecyclemapping.model.IPluginExecutionMetadata, java.io.Serializable, java.lang.Cloneable
{

      //--------------------------/
     //- Class/Member Variables -/
    //--------------------------/

    /**
     * Field filter.
     */
    private PluginExecutionFilter filter;

    /**
     * Field actionDom.
     */
    private Object actionDom;

    /**
     * 
     *              Arbitrary comment that describes the mapping.
     * The comment is not interpreted by m2e in any way.
     *              @since 1.2
     *           .
     */
    private String comment;


      //-----------/
     //- Methods -/
    //-----------/

    /**
     * Method clone.
     * 
     * @return PluginExecutionMetadata
     */
    public PluginExecutionMetadata clone()
    {
        try
        {
            PluginExecutionMetadata copy = (PluginExecutionMetadata) super.clone();

            if ( this.filter != null )
            {
                copy.filter = (PluginExecutionFilter) this.filter.clone();
            }

            if ( this.actionDom != null )
            {
                copy.actionDom = new org.codehaus.plexus.util.xml.Xpp3Dom( (org.codehaus.plexus.util.xml.Xpp3Dom) this.actionDom );
            }

            return copy;
        }
        catch ( java.lang.Exception ex )
        {
            throw (java.lang.RuntimeException) new java.lang.UnsupportedOperationException( getClass().getName()
                + " does not support clone()" ).initCause( ex );
        }
    } //-- PluginExecutionMetadata clone()

    /**
     * Get the actionDom field.
     * 
     * @return Object
     */
    public Object getActionDom()
    {
        return this.actionDom;
    } //-- Object getActionDom()

    /**
     * Get arbitrary comment that describes the mapping. The
     * comment is not interpreted by m2e in any way.
     *              @since 1.2.
     * 
     * @return String
     */
    public String getComment()
    {
        return this.comment;
    } //-- String getComment()

    /**
     * Get the filter field.
     * 
     * @return PluginExecutionFilter
     */
    public PluginExecutionFilter getFilter()
    {
        return this.filter;
    } //-- PluginExecutionFilter getFilter()

    /**
     * Set the actionDom field.
     * 
     * @param actionDom
     */
    public void setActionDom( Object actionDom )
    {
        this.actionDom = actionDom;
    } //-- void setActionDom( Object )

    /**
     * Set arbitrary comment that describes the mapping. The
     * comment is not interpreted by m2e in any way.
     *              @since 1.2.
     * 
     * @param comment
     */
    public void setComment( String comment )
    {
        this.comment = comment;
    } //-- void setComment( String )

    /**
     * Set the filter field.
     * 
     * @param filter
     */
    public void setFilter( PluginExecutionFilter filter )
    {
        this.filter = filter;
    } //-- void setFilter( PluginExecutionFilter )

    
  public org.eclipse.m2e.core.lifecyclemapping.model.PluginExecutionAction getAction() {
    org.codehaus.plexus.util.xml.Xpp3Dom actionDom = ((org.codehaus.plexus.util.xml.Xpp3Dom) getActionDom()).getChild(0);
    return org.eclipse.m2e.core.lifecyclemapping.model.PluginExecutionAction.valueOf(actionDom.getName());
  }

  public org.codehaus.plexus.util.xml.Xpp3Dom getConfiguration() {
    org.codehaus.plexus.util.xml.Xpp3Dom actionDom = ((org.codehaus.plexus.util.xml.Xpp3Dom) getActionDom());
    return actionDom.getChild(0);
  }
  
  private transient LifecycleMappingMetadataSource source;
  public void setSource(LifecycleMappingMetadataSource source) {
    this.source = source;
  }
  public LifecycleMappingMetadataSource getSource() {
    return this.source;
  }
            
          
}
